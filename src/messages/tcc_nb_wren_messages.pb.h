// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tcc_nb_wren_messages.proto

#ifndef PROTOBUF_tcc_5fnb_5fwren_5fmessages_2eproto__INCLUDED
#define PROTOBUF_tcc_5fnb_5fwren_5fmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "rpc_messages.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
void protobuf_AssignDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
void protobuf_ShutdownFile_tcc_5fnb_5fwren_5fmessages_2eproto();

class PbRpcTccNBWrenPublicStartArg;
class PbRpcTccNBWrenPublicStartResult;
class PbRpcTccNBWrenKVPublicReadArg;
class PbRpcTccNBWrenKVPublicReadResult;
class PbRpcTccNBWrenKVPublicCommitArg;
class PbRpcTccNBWrenKVPublicCommitResult;
class PbRpcTccNBWrenKVInternalTxSliceReadKeysArg;
class PbRpcTccNBWrenPartitionClientPrepareRequestArg;
class PbRpcStabilizationTime;
class PbRpcPeerStabilizationTimes;
class PbRpcST;
class PbRpcTccNBWrenKVInternalTxSliceReadKeysResult;

// ===================================================================

class PbRpcTccNBWrenPublicStartArg : public ::google::protobuf::Message {
 public:
  PbRpcTccNBWrenPublicStartArg();
  virtual ~PbRpcTccNBWrenPublicStartArg();

  PbRpcTccNBWrenPublicStartArg(const PbRpcTccNBWrenPublicStartArg& from);

  inline PbRpcTccNBWrenPublicStartArg& operator=(const PbRpcTccNBWrenPublicStartArg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcTccNBWrenPublicStartArg& default_instance();

  void Swap(PbRpcTccNBWrenPublicStartArg* other);

  // implements Message ----------------------------------------------

  PbRpcTccNBWrenPublicStartArg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcTccNBWrenPublicStartArg& from);
  void MergeFrom(const PbRpcTccNBWrenPublicStartArg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .PbPhysicalTimeSpec GLST = 1;
  inline bool has_glst() const;
  inline void clear_glst();
  static const int kGLSTFieldNumber = 1;
  inline const ::PbPhysicalTimeSpec& glst() const;
  inline ::PbPhysicalTimeSpec* mutable_glst();
  inline ::PbPhysicalTimeSpec* release_glst();
  inline void set_allocated_glst(::PbPhysicalTimeSpec* glst);

  // required .PbPhysicalTimeSpec GRST = 2;
  inline bool has_grst() const;
  inline void clear_grst();
  static const int kGRSTFieldNumber = 2;
  inline const ::PbPhysicalTimeSpec& grst() const;
  inline ::PbPhysicalTimeSpec* mutable_grst();
  inline ::PbPhysicalTimeSpec* release_grst();
  inline void set_allocated_grst(::PbPhysicalTimeSpec* grst);

  // @@protoc_insertion_point(class_scope:PbRpcTccNBWrenPublicStartArg)
 private:
  inline void set_has_glst();
  inline void clear_has_glst();
  inline void set_has_grst();
  inline void clear_has_grst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::PbPhysicalTimeSpec* glst_;
  ::PbPhysicalTimeSpec* grst_;
  friend void  protobuf_AddDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tcc_5fnb_5fwren_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcTccNBWrenPublicStartArg* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcTccNBWrenPublicStartResult : public ::google::protobuf::Message {
 public:
  PbRpcTccNBWrenPublicStartResult();
  virtual ~PbRpcTccNBWrenPublicStartResult();

  PbRpcTccNBWrenPublicStartResult(const PbRpcTccNBWrenPublicStartResult& from);

  inline PbRpcTccNBWrenPublicStartResult& operator=(const PbRpcTccNBWrenPublicStartResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcTccNBWrenPublicStartResult& default_instance();

  void Swap(PbRpcTccNBWrenPublicStartResult* other);

  // implements Message ----------------------------------------------

  PbRpcTccNBWrenPublicStartResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcTccNBWrenPublicStartResult& from);
  void MergeFrom(const PbRpcTccNBWrenPublicStartResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool Succeeded = 1;
  inline bool has_succeeded() const;
  inline void clear_succeeded();
  static const int kSucceededFieldNumber = 1;
  inline bool succeeded() const;
  inline void set_succeeded(bool value);

  // required int64 ID = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required .PbPhysicalTimeSpec GRST = 3;
  inline bool has_grst() const;
  inline void clear_grst();
  static const int kGRSTFieldNumber = 3;
  inline const ::PbPhysicalTimeSpec& grst() const;
  inline ::PbPhysicalTimeSpec* mutable_grst();
  inline ::PbPhysicalTimeSpec* release_grst();
  inline void set_allocated_grst(::PbPhysicalTimeSpec* grst);

  // required .PbPhysicalTimeSpec GLST = 4;
  inline bool has_glst() const;
  inline void clear_glst();
  static const int kGLSTFieldNumber = 4;
  inline const ::PbPhysicalTimeSpec& glst() const;
  inline ::PbPhysicalTimeSpec* mutable_glst();
  inline ::PbPhysicalTimeSpec* release_glst();
  inline void set_allocated_glst(::PbPhysicalTimeSpec* glst);

  // @@protoc_insertion_point(class_scope:PbRpcTccNBWrenPublicStartResult)
 private:
  inline void set_has_succeeded();
  inline void clear_has_succeeded();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_grst();
  inline void clear_has_grst();
  inline void set_has_glst();
  inline void clear_has_glst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::PbPhysicalTimeSpec* grst_;
  ::PbPhysicalTimeSpec* glst_;
  bool succeeded_;
  friend void  protobuf_AddDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tcc_5fnb_5fwren_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcTccNBWrenPublicStartResult* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcTccNBWrenKVPublicReadArg : public ::google::protobuf::Message {
 public:
  PbRpcTccNBWrenKVPublicReadArg();
  virtual ~PbRpcTccNBWrenKVPublicReadArg();

  PbRpcTccNBWrenKVPublicReadArg(const PbRpcTccNBWrenKVPublicReadArg& from);

  inline PbRpcTccNBWrenKVPublicReadArg& operator=(const PbRpcTccNBWrenKVPublicReadArg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcTccNBWrenKVPublicReadArg& default_instance();

  void Swap(PbRpcTccNBWrenKVPublicReadArg* other);

  // implements Message ----------------------------------------------

  PbRpcTccNBWrenKVPublicReadArg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcTccNBWrenKVPublicReadArg& from);
  void MergeFrom(const PbRpcTccNBWrenKVPublicReadArg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // repeated bytes Key = 2;
  inline int key_size() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::std::string& key(int index) const;
  inline ::std::string* mutable_key(int index);
  inline void set_key(int index, const ::std::string& value);
  inline void set_key(int index, const char* value);
  inline void set_key(int index, const void* value, size_t size);
  inline ::std::string* add_key();
  inline void add_key(const ::std::string& value);
  inline void add_key(const char* value);
  inline void add_key(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& key() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_key();

  // @@protoc_insertion_point(class_scope:PbRpcTccNBWrenKVPublicReadArg)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> key_;
  friend void  protobuf_AddDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tcc_5fnb_5fwren_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcTccNBWrenKVPublicReadArg* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcTccNBWrenKVPublicReadResult : public ::google::protobuf::Message {
 public:
  PbRpcTccNBWrenKVPublicReadResult();
  virtual ~PbRpcTccNBWrenKVPublicReadResult();

  PbRpcTccNBWrenKVPublicReadResult(const PbRpcTccNBWrenKVPublicReadResult& from);

  inline PbRpcTccNBWrenKVPublicReadResult& operator=(const PbRpcTccNBWrenKVPublicReadResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcTccNBWrenKVPublicReadResult& default_instance();

  void Swap(PbRpcTccNBWrenKVPublicReadResult* other);

  // implements Message ----------------------------------------------

  PbRpcTccNBWrenKVPublicReadResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcTccNBWrenKVPublicReadResult& from);
  void MergeFrom(const PbRpcTccNBWrenKVPublicReadResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool Succeeded = 1;
  inline bool has_succeeded() const;
  inline void clear_succeeded();
  static const int kSucceededFieldNumber = 1;
  inline bool succeeded() const;
  inline void set_succeeded(bool value);

  // repeated bytes Value = 2;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value(int index) const;
  inline ::std::string* mutable_value(int index);
  inline void set_value(int index, const ::std::string& value);
  inline void set_value(int index, const char* value);
  inline void set_value(int index, const void* value, size_t size);
  inline ::std::string* add_value();
  inline void add_value(const ::std::string& value);
  inline void add_value(const char* value);
  inline void add_value(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // @@protoc_insertion_point(class_scope:PbRpcTccNBWrenKVPublicReadResult)
 private:
  inline void set_has_succeeded();
  inline void clear_has_succeeded();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  bool succeeded_;
  friend void  protobuf_AddDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tcc_5fnb_5fwren_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcTccNBWrenKVPublicReadResult* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcTccNBWrenKVPublicCommitArg : public ::google::protobuf::Message {
 public:
  PbRpcTccNBWrenKVPublicCommitArg();
  virtual ~PbRpcTccNBWrenKVPublicCommitArg();

  PbRpcTccNBWrenKVPublicCommitArg(const PbRpcTccNBWrenKVPublicCommitArg& from);

  inline PbRpcTccNBWrenKVPublicCommitArg& operator=(const PbRpcTccNBWrenKVPublicCommitArg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcTccNBWrenKVPublicCommitArg& default_instance();

  void Swap(PbRpcTccNBWrenKVPublicCommitArg* other);

  // implements Message ----------------------------------------------

  PbRpcTccNBWrenKVPublicCommitArg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcTccNBWrenKVPublicCommitArg& from);
  void MergeFrom(const PbRpcTccNBWrenKVPublicCommitArg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // repeated bytes Key = 2;
  inline int key_size() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::std::string& key(int index) const;
  inline ::std::string* mutable_key(int index);
  inline void set_key(int index, const ::std::string& value);
  inline void set_key(int index, const char* value);
  inline void set_key(int index, const void* value, size_t size);
  inline ::std::string* add_key();
  inline void add_key(const ::std::string& value);
  inline void add_key(const char* value);
  inline void add_key(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& key() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_key();

  // repeated bytes Value = 3;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline const ::std::string& value(int index) const;
  inline ::std::string* mutable_value(int index);
  inline void set_value(int index, const ::std::string& value);
  inline void set_value(int index, const char* value);
  inline void set_value(int index, const void* value, size_t size);
  inline ::std::string* add_value();
  inline void add_value(const ::std::string& value);
  inline void add_value(const char* value);
  inline void add_value(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // optional .PbPhysicalTimeSpec LCT = 4;
  inline bool has_lct() const;
  inline void clear_lct();
  static const int kLCTFieldNumber = 4;
  inline const ::PbPhysicalTimeSpec& lct() const;
  inline ::PbPhysicalTimeSpec* mutable_lct();
  inline ::PbPhysicalTimeSpec* release_lct();
  inline void set_allocated_lct(::PbPhysicalTimeSpec* lct);

  // @@protoc_insertion_point(class_scope:PbRpcTccNBWrenKVPublicCommitArg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_lct();
  inline void clear_has_lct();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> key_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  ::PbPhysicalTimeSpec* lct_;
  friend void  protobuf_AddDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tcc_5fnb_5fwren_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcTccNBWrenKVPublicCommitArg* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcTccNBWrenKVPublicCommitResult : public ::google::protobuf::Message {
 public:
  PbRpcTccNBWrenKVPublicCommitResult();
  virtual ~PbRpcTccNBWrenKVPublicCommitResult();

  PbRpcTccNBWrenKVPublicCommitResult(const PbRpcTccNBWrenKVPublicCommitResult& from);

  inline PbRpcTccNBWrenKVPublicCommitResult& operator=(const PbRpcTccNBWrenKVPublicCommitResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcTccNBWrenKVPublicCommitResult& default_instance();

  void Swap(PbRpcTccNBWrenKVPublicCommitResult* other);

  // implements Message ----------------------------------------------

  PbRpcTccNBWrenKVPublicCommitResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcTccNBWrenKVPublicCommitResult& from);
  void MergeFrom(const PbRpcTccNBWrenKVPublicCommitResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool Succeeded = 1;
  inline bool has_succeeded() const;
  inline void clear_succeeded();
  static const int kSucceededFieldNumber = 1;
  inline bool succeeded() const;
  inline void set_succeeded(bool value);

  // required .PbPhysicalTimeSpec CT = 2;
  inline bool has_ct() const;
  inline void clear_ct();
  static const int kCTFieldNumber = 2;
  inline const ::PbPhysicalTimeSpec& ct() const;
  inline ::PbPhysicalTimeSpec* mutable_ct();
  inline ::PbPhysicalTimeSpec* release_ct();
  inline void set_allocated_ct(::PbPhysicalTimeSpec* ct);

  // @@protoc_insertion_point(class_scope:PbRpcTccNBWrenKVPublicCommitResult)
 private:
  inline void set_has_succeeded();
  inline void clear_has_succeeded();
  inline void set_has_ct();
  inline void clear_has_ct();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::PbPhysicalTimeSpec* ct_;
  bool succeeded_;
  friend void  protobuf_AddDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tcc_5fnb_5fwren_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcTccNBWrenKVPublicCommitResult* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcTccNBWrenKVInternalTxSliceReadKeysArg : public ::google::protobuf::Message {
 public:
  PbRpcTccNBWrenKVInternalTxSliceReadKeysArg();
  virtual ~PbRpcTccNBWrenKVInternalTxSliceReadKeysArg();

  PbRpcTccNBWrenKVInternalTxSliceReadKeysArg(const PbRpcTccNBWrenKVInternalTxSliceReadKeysArg& from);

  inline PbRpcTccNBWrenKVInternalTxSliceReadKeysArg& operator=(const PbRpcTccNBWrenKVInternalTxSliceReadKeysArg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcTccNBWrenKVInternalTxSliceReadKeysArg& default_instance();

  void Swap(PbRpcTccNBWrenKVInternalTxSliceReadKeysArg* other);

  // implements Message ----------------------------------------------

  PbRpcTccNBWrenKVInternalTxSliceReadKeysArg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcTccNBWrenKVInternalTxSliceReadKeysArg& from);
  void MergeFrom(const PbRpcTccNBWrenKVInternalTxSliceReadKeysArg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes Key = 1;
  inline int key_size() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key(int index) const;
  inline ::std::string* mutable_key(int index);
  inline void set_key(int index, const ::std::string& value);
  inline void set_key(int index, const char* value);
  inline void set_key(int index, const void* value, size_t size);
  inline ::std::string* add_key();
  inline void add_key(const ::std::string& value);
  inline void add_key(const char* value);
  inline void add_key(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& key() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_key();

  // required .PbPhysicalTimeSpec LST = 2;
  inline bool has_lst() const;
  inline void clear_lst();
  static const int kLSTFieldNumber = 2;
  inline const ::PbPhysicalTimeSpec& lst() const;
  inline ::PbPhysicalTimeSpec* mutable_lst();
  inline ::PbPhysicalTimeSpec* release_lst();
  inline void set_allocated_lst(::PbPhysicalTimeSpec* lst);

  // required .PbPhysicalTimeSpec RST = 3;
  inline bool has_rst() const;
  inline void clear_rst();
  static const int kRSTFieldNumber = 3;
  inline const ::PbPhysicalTimeSpec& rst() const;
  inline ::PbPhysicalTimeSpec* mutable_rst();
  inline ::PbPhysicalTimeSpec* release_rst();
  inline void set_allocated_rst(::PbPhysicalTimeSpec* rst);

  // optional int64 id = 4;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int64 src = 5;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 5;
  inline ::google::protobuf::int64 src() const;
  inline void set_src(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg)
 private:
  inline void set_has_lst();
  inline void clear_has_lst();
  inline void set_has_rst();
  inline void clear_has_rst();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_src();
  inline void clear_has_src();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> key_;
  ::PbPhysicalTimeSpec* lst_;
  ::PbPhysicalTimeSpec* rst_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 src_;
  friend void  protobuf_AddDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tcc_5fnb_5fwren_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcTccNBWrenKVInternalTxSliceReadKeysArg* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcTccNBWrenPartitionClientPrepareRequestArg : public ::google::protobuf::Message {
 public:
  PbRpcTccNBWrenPartitionClientPrepareRequestArg();
  virtual ~PbRpcTccNBWrenPartitionClientPrepareRequestArg();

  PbRpcTccNBWrenPartitionClientPrepareRequestArg(const PbRpcTccNBWrenPartitionClientPrepareRequestArg& from);

  inline PbRpcTccNBWrenPartitionClientPrepareRequestArg& operator=(const PbRpcTccNBWrenPartitionClientPrepareRequestArg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcTccNBWrenPartitionClientPrepareRequestArg& default_instance();

  void Swap(PbRpcTccNBWrenPartitionClientPrepareRequestArg* other);

  // implements Message ----------------------------------------------

  PbRpcTccNBWrenPartitionClientPrepareRequestArg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcTccNBWrenPartitionClientPrepareRequestArg& from);
  void MergeFrom(const PbRpcTccNBWrenPartitionClientPrepareRequestArg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required .PbPhysicalTimeSpec LST = 2;
  inline bool has_lst() const;
  inline void clear_lst();
  static const int kLSTFieldNumber = 2;
  inline const ::PbPhysicalTimeSpec& lst() const;
  inline ::PbPhysicalTimeSpec* mutable_lst();
  inline ::PbPhysicalTimeSpec* release_lst();
  inline void set_allocated_lst(::PbPhysicalTimeSpec* lst);

  // required .PbPhysicalTimeSpec RST = 3;
  inline bool has_rst() const;
  inline void clear_rst();
  static const int kRSTFieldNumber = 3;
  inline const ::PbPhysicalTimeSpec& rst() const;
  inline ::PbPhysicalTimeSpec* mutable_rst();
  inline ::PbPhysicalTimeSpec* release_rst();
  inline void set_allocated_rst(::PbPhysicalTimeSpec* rst);

  // required .PbPhysicalTimeSpec HT = 4;
  inline bool has_ht() const;
  inline void clear_ht();
  static const int kHTFieldNumber = 4;
  inline const ::PbPhysicalTimeSpec& ht() const;
  inline ::PbPhysicalTimeSpec* mutable_ht();
  inline ::PbPhysicalTimeSpec* release_ht();
  inline void set_allocated_ht(::PbPhysicalTimeSpec* ht);

  // repeated bytes Key = 5;
  inline int key_size() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 5;
  inline const ::std::string& key(int index) const;
  inline ::std::string* mutable_key(int index);
  inline void set_key(int index, const ::std::string& value);
  inline void set_key(int index, const char* value);
  inline void set_key(int index, const void* value, size_t size);
  inline ::std::string* add_key();
  inline void add_key(const ::std::string& value);
  inline void add_key(const char* value);
  inline void add_key(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& key() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_key();

  // repeated bytes Value = 6;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 6;
  inline const ::std::string& value(int index) const;
  inline ::std::string* mutable_value(int index);
  inline void set_value(int index, const ::std::string& value);
  inline void set_value(int index, const char* value);
  inline void set_value(int index, const void* value, size_t size);
  inline ::std::string* add_value();
  inline void add_value(const ::std::string& value);
  inline void add_value(const char* value);
  inline void add_value(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // required int64 src = 7;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 7;
  inline ::google::protobuf::int64 src() const;
  inline void set_src(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PbRpcTccNBWrenPartitionClientPrepareRequestArg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_lst();
  inline void clear_has_lst();
  inline void set_has_rst();
  inline void clear_has_rst();
  inline void set_has_ht();
  inline void clear_has_ht();
  inline void set_has_src();
  inline void clear_has_src();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::PbPhysicalTimeSpec* lst_;
  ::PbPhysicalTimeSpec* rst_;
  ::PbPhysicalTimeSpec* ht_;
  ::google::protobuf::RepeatedPtrField< ::std::string> key_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  ::google::protobuf::int64 src_;
  friend void  protobuf_AddDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tcc_5fnb_5fwren_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcTccNBWrenPartitionClientPrepareRequestArg* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcStabilizationTime : public ::google::protobuf::Message {
 public:
  PbRpcStabilizationTime();
  virtual ~PbRpcStabilizationTime();

  PbRpcStabilizationTime(const PbRpcStabilizationTime& from);

  inline PbRpcStabilizationTime& operator=(const PbRpcStabilizationTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcStabilizationTime& default_instance();

  void Swap(PbRpcStabilizationTime* other);

  // implements Message ----------------------------------------------

  PbRpcStabilizationTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcStabilizationTime& from);
  void MergeFrom(const PbRpcStabilizationTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .PbPhysicalTimeSpec GRST = 1;
  inline bool has_grst() const;
  inline void clear_grst();
  static const int kGRSTFieldNumber = 1;
  inline const ::PbPhysicalTimeSpec& grst() const;
  inline ::PbPhysicalTimeSpec* mutable_grst();
  inline ::PbPhysicalTimeSpec* release_grst();
  inline void set_allocated_grst(::PbPhysicalTimeSpec* grst);

  // required .PbPhysicalTimeSpec GLST = 2;
  inline bool has_glst() const;
  inline void clear_glst();
  static const int kGLSTFieldNumber = 2;
  inline const ::PbPhysicalTimeSpec& glst() const;
  inline ::PbPhysicalTimeSpec* mutable_glst();
  inline ::PbPhysicalTimeSpec* release_glst();
  inline void set_allocated_glst(::PbPhysicalTimeSpec* glst);

  // @@protoc_insertion_point(class_scope:PbRpcStabilizationTime)
 private:
  inline void set_has_grst();
  inline void clear_has_grst();
  inline void set_has_glst();
  inline void clear_has_glst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::PbPhysicalTimeSpec* grst_;
  ::PbPhysicalTimeSpec* glst_;
  friend void  protobuf_AddDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tcc_5fnb_5fwren_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcStabilizationTime* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcPeerStabilizationTimes : public ::google::protobuf::Message {
 public:
  PbRpcPeerStabilizationTimes();
  virtual ~PbRpcPeerStabilizationTimes();

  PbRpcPeerStabilizationTimes(const PbRpcPeerStabilizationTimes& from);

  inline PbRpcPeerStabilizationTimes& operator=(const PbRpcPeerStabilizationTimes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcPeerStabilizationTimes& default_instance();

  void Swap(PbRpcPeerStabilizationTimes* other);

  // implements Message ----------------------------------------------

  PbRpcPeerStabilizationTimes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcPeerStabilizationTimes& from);
  void MergeFrom(const PbRpcPeerStabilizationTimes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .PbPhysicalTimeSpec RST = 1;
  inline bool has_rst() const;
  inline void clear_rst();
  static const int kRSTFieldNumber = 1;
  inline const ::PbPhysicalTimeSpec& rst() const;
  inline ::PbPhysicalTimeSpec* mutable_rst();
  inline ::PbPhysicalTimeSpec* release_rst();
  inline void set_allocated_rst(::PbPhysicalTimeSpec* rst);

  // required .PbPhysicalTimeSpec LST = 2;
  inline bool has_lst() const;
  inline void clear_lst();
  static const int kLSTFieldNumber = 2;
  inline const ::PbPhysicalTimeSpec& lst() const;
  inline ::PbPhysicalTimeSpec* mutable_lst();
  inline ::PbPhysicalTimeSpec* release_lst();
  inline void set_allocated_lst(::PbPhysicalTimeSpec* lst);

  // optional int64 SrcPartition = 4;
  inline bool has_srcpartition() const;
  inline void clear_srcpartition();
  static const int kSrcPartitionFieldNumber = 4;
  inline ::google::protobuf::int64 srcpartition() const;
  inline void set_srcpartition(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PbRpcPeerStabilizationTimes)
 private:
  inline void set_has_rst();
  inline void clear_has_rst();
  inline void set_has_lst();
  inline void clear_has_lst();
  inline void set_has_srcpartition();
  inline void clear_has_srcpartition();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::PbPhysicalTimeSpec* rst_;
  ::PbPhysicalTimeSpec* lst_;
  ::google::protobuf::int64 srcpartition_;
  friend void  protobuf_AddDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tcc_5fnb_5fwren_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcPeerStabilizationTimes* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcST : public ::google::protobuf::Message {
 public:
  PbRpcST();
  virtual ~PbRpcST();

  PbRpcST(const PbRpcST& from);

  inline PbRpcST& operator=(const PbRpcST& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcST& default_instance();

  void Swap(PbRpcST* other);

  // implements Message ----------------------------------------------

  PbRpcST* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcST& from);
  void MergeFrom(const PbRpcST& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Round = 1;
  inline bool has_round() const;
  inline void clear_round();
  static const int kRoundFieldNumber = 1;
  inline ::google::protobuf::int32 round() const;
  inline void set_round(::google::protobuf::int32 value);

  // required .PbPhysicalTimeSpec RST = 2;
  inline bool has_rst() const;
  inline void clear_rst();
  static const int kRSTFieldNumber = 2;
  inline const ::PbPhysicalTimeSpec& rst() const;
  inline ::PbPhysicalTimeSpec* mutable_rst();
  inline ::PbPhysicalTimeSpec* release_rst();
  inline void set_allocated_rst(::PbPhysicalTimeSpec* rst);

  // required .PbPhysicalTimeSpec LST = 3;
  inline bool has_lst() const;
  inline void clear_lst();
  static const int kLSTFieldNumber = 3;
  inline const ::PbPhysicalTimeSpec& lst() const;
  inline ::PbPhysicalTimeSpec* mutable_lst();
  inline ::PbPhysicalTimeSpec* release_lst();
  inline void set_allocated_lst(::PbPhysicalTimeSpec* lst);

  // @@protoc_insertion_point(class_scope:PbRpcST)
 private:
  inline void set_has_round();
  inline void clear_has_round();
  inline void set_has_rst();
  inline void clear_has_rst();
  inline void set_has_lst();
  inline void clear_has_lst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::PbPhysicalTimeSpec* rst_;
  ::PbPhysicalTimeSpec* lst_;
  ::google::protobuf::int32 round_;
  friend void  protobuf_AddDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tcc_5fnb_5fwren_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcST* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcTccNBWrenKVInternalTxSliceReadKeysResult : public ::google::protobuf::Message {
 public:
  PbRpcTccNBWrenKVInternalTxSliceReadKeysResult();
  virtual ~PbRpcTccNBWrenKVInternalTxSliceReadKeysResult();

  PbRpcTccNBWrenKVInternalTxSliceReadKeysResult(const PbRpcTccNBWrenKVInternalTxSliceReadKeysResult& from);

  inline PbRpcTccNBWrenKVInternalTxSliceReadKeysResult& operator=(const PbRpcTccNBWrenKVInternalTxSliceReadKeysResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcTccNBWrenKVInternalTxSliceReadKeysResult& default_instance();

  void Swap(PbRpcTccNBWrenKVInternalTxSliceReadKeysResult* other);

  // implements Message ----------------------------------------------

  PbRpcTccNBWrenKVInternalTxSliceReadKeysResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcTccNBWrenKVInternalTxSliceReadKeysResult& from);
  void MergeFrom(const PbRpcTccNBWrenKVInternalTxSliceReadKeysResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool Succeeded = 1;
  inline bool has_succeeded() const;
  inline void clear_succeeded();
  static const int kSucceededFieldNumber = 1;
  inline bool succeeded() const;
  inline void set_succeeded(bool value);

  // repeated bytes Value = 2;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value(int index) const;
  inline ::std::string* mutable_value(int index);
  inline void set_value(int index, const ::std::string& value);
  inline void set_value(int index, const char* value);
  inline void set_value(int index, const void* value, size_t size);
  inline ::std::string* add_value();
  inline void add_value(const ::std::string& value);
  inline void add_value(const char* value);
  inline void add_value(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // optional int32 Src = 3;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 3;
  inline ::google::protobuf::int32 src() const;
  inline void set_src(::google::protobuf::int32 value);

  // optional int64 id = 4;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional double waitedXact = 5;
  inline bool has_waitedxact() const;
  inline void clear_waitedxact();
  static const int kWaitedXactFieldNumber = 5;
  inline double waitedxact() const;
  inline void set_waitedxact(double value);

  // @@protoc_insertion_point(class_scope:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult)
 private:
  inline void set_has_succeeded();
  inline void clear_has_succeeded();
  inline void set_has_src();
  inline void clear_has_src();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_waitedxact();
  inline void clear_has_waitedxact();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  bool succeeded_;
  ::google::protobuf::int32 src_;
  ::google::protobuf::int64 id_;
  double waitedxact_;
  friend void  protobuf_AddDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tcc_5fnb_5fwren_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tcc_5fnb_5fwren_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcTccNBWrenKVInternalTxSliceReadKeysResult* default_instance_;
};
// ===================================================================


// ===================================================================

// PbRpcTccNBWrenPublicStartArg

// required .PbPhysicalTimeSpec GLST = 1;
inline bool PbRpcTccNBWrenPublicStartArg::has_glst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcTccNBWrenPublicStartArg::set_has_glst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcTccNBWrenPublicStartArg::clear_has_glst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcTccNBWrenPublicStartArg::clear_glst() {
  if (glst_ != NULL) glst_->::PbPhysicalTimeSpec::Clear();
  clear_has_glst();
}
inline const ::PbPhysicalTimeSpec& PbRpcTccNBWrenPublicStartArg::glst() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenPublicStartArg.GLST)
  return glst_ != NULL ? *glst_ : *default_instance_->glst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenPublicStartArg::mutable_glst() {
  set_has_glst();
  if (glst_ == NULL) glst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenPublicStartArg.GLST)
  return glst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenPublicStartArg::release_glst() {
  clear_has_glst();
  ::PbPhysicalTimeSpec* temp = glst_;
  glst_ = NULL;
  return temp;
}
inline void PbRpcTccNBWrenPublicStartArg::set_allocated_glst(::PbPhysicalTimeSpec* glst) {
  delete glst_;
  glst_ = glst;
  if (glst) {
    set_has_glst();
  } else {
    clear_has_glst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcTccNBWrenPublicStartArg.GLST)
}

// required .PbPhysicalTimeSpec GRST = 2;
inline bool PbRpcTccNBWrenPublicStartArg::has_grst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcTccNBWrenPublicStartArg::set_has_grst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcTccNBWrenPublicStartArg::clear_has_grst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcTccNBWrenPublicStartArg::clear_grst() {
  if (grst_ != NULL) grst_->::PbPhysicalTimeSpec::Clear();
  clear_has_grst();
}
inline const ::PbPhysicalTimeSpec& PbRpcTccNBWrenPublicStartArg::grst() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenPublicStartArg.GRST)
  return grst_ != NULL ? *grst_ : *default_instance_->grst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenPublicStartArg::mutable_grst() {
  set_has_grst();
  if (grst_ == NULL) grst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenPublicStartArg.GRST)
  return grst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenPublicStartArg::release_grst() {
  clear_has_grst();
  ::PbPhysicalTimeSpec* temp = grst_;
  grst_ = NULL;
  return temp;
}
inline void PbRpcTccNBWrenPublicStartArg::set_allocated_grst(::PbPhysicalTimeSpec* grst) {
  delete grst_;
  grst_ = grst;
  if (grst) {
    set_has_grst();
  } else {
    clear_has_grst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcTccNBWrenPublicStartArg.GRST)
}

// -------------------------------------------------------------------

// PbRpcTccNBWrenPublicStartResult

// required bool Succeeded = 1;
inline bool PbRpcTccNBWrenPublicStartResult::has_succeeded() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcTccNBWrenPublicStartResult::set_has_succeeded() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcTccNBWrenPublicStartResult::clear_has_succeeded() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcTccNBWrenPublicStartResult::clear_succeeded() {
  succeeded_ = false;
  clear_has_succeeded();
}
inline bool PbRpcTccNBWrenPublicStartResult::succeeded() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenPublicStartResult.Succeeded)
  return succeeded_;
}
inline void PbRpcTccNBWrenPublicStartResult::set_succeeded(bool value) {
  set_has_succeeded();
  succeeded_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenPublicStartResult.Succeeded)
}

// required int64 ID = 2;
inline bool PbRpcTccNBWrenPublicStartResult::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcTccNBWrenPublicStartResult::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcTccNBWrenPublicStartResult::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcTccNBWrenPublicStartResult::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PbRpcTccNBWrenPublicStartResult::id() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenPublicStartResult.ID)
  return id_;
}
inline void PbRpcTccNBWrenPublicStartResult::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenPublicStartResult.ID)
}

// required .PbPhysicalTimeSpec GRST = 3;
inline bool PbRpcTccNBWrenPublicStartResult::has_grst() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbRpcTccNBWrenPublicStartResult::set_has_grst() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbRpcTccNBWrenPublicStartResult::clear_has_grst() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbRpcTccNBWrenPublicStartResult::clear_grst() {
  if (grst_ != NULL) grst_->::PbPhysicalTimeSpec::Clear();
  clear_has_grst();
}
inline const ::PbPhysicalTimeSpec& PbRpcTccNBWrenPublicStartResult::grst() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenPublicStartResult.GRST)
  return grst_ != NULL ? *grst_ : *default_instance_->grst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenPublicStartResult::mutable_grst() {
  set_has_grst();
  if (grst_ == NULL) grst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenPublicStartResult.GRST)
  return grst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenPublicStartResult::release_grst() {
  clear_has_grst();
  ::PbPhysicalTimeSpec* temp = grst_;
  grst_ = NULL;
  return temp;
}
inline void PbRpcTccNBWrenPublicStartResult::set_allocated_grst(::PbPhysicalTimeSpec* grst) {
  delete grst_;
  grst_ = grst;
  if (grst) {
    set_has_grst();
  } else {
    clear_has_grst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcTccNBWrenPublicStartResult.GRST)
}

// required .PbPhysicalTimeSpec GLST = 4;
inline bool PbRpcTccNBWrenPublicStartResult::has_glst() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PbRpcTccNBWrenPublicStartResult::set_has_glst() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PbRpcTccNBWrenPublicStartResult::clear_has_glst() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PbRpcTccNBWrenPublicStartResult::clear_glst() {
  if (glst_ != NULL) glst_->::PbPhysicalTimeSpec::Clear();
  clear_has_glst();
}
inline const ::PbPhysicalTimeSpec& PbRpcTccNBWrenPublicStartResult::glst() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenPublicStartResult.GLST)
  return glst_ != NULL ? *glst_ : *default_instance_->glst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenPublicStartResult::mutable_glst() {
  set_has_glst();
  if (glst_ == NULL) glst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenPublicStartResult.GLST)
  return glst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenPublicStartResult::release_glst() {
  clear_has_glst();
  ::PbPhysicalTimeSpec* temp = glst_;
  glst_ = NULL;
  return temp;
}
inline void PbRpcTccNBWrenPublicStartResult::set_allocated_glst(::PbPhysicalTimeSpec* glst) {
  delete glst_;
  glst_ = glst;
  if (glst) {
    set_has_glst();
  } else {
    clear_has_glst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcTccNBWrenPublicStartResult.GLST)
}

// -------------------------------------------------------------------

// PbRpcTccNBWrenKVPublicReadArg

// required int64 ID = 1;
inline bool PbRpcTccNBWrenKVPublicReadArg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcTccNBWrenKVPublicReadArg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcTccNBWrenKVPublicReadArg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcTccNBWrenKVPublicReadArg::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PbRpcTccNBWrenKVPublicReadArg::id() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVPublicReadArg.ID)
  return id_;
}
inline void PbRpcTccNBWrenKVPublicReadArg::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVPublicReadArg.ID)
}

// repeated bytes Key = 2;
inline int PbRpcTccNBWrenKVPublicReadArg::key_size() const {
  return key_.size();
}
inline void PbRpcTccNBWrenKVPublicReadArg::clear_key() {
  key_.Clear();
}
inline const ::std::string& PbRpcTccNBWrenKVPublicReadArg::key(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVPublicReadArg.Key)
  return key_.Get(index);
}
inline ::std::string* PbRpcTccNBWrenKVPublicReadArg::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenKVPublicReadArg.Key)
  return key_.Mutable(index);
}
inline void PbRpcTccNBWrenKVPublicReadArg::set_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVPublicReadArg.Key)
  key_.Mutable(index)->assign(value);
}
inline void PbRpcTccNBWrenKVPublicReadArg::set_key(int index, const char* value) {
  key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcTccNBWrenKVPublicReadArg.Key)
}
inline void PbRpcTccNBWrenKVPublicReadArg::set_key(int index, const void* value, size_t size) {
  key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcTccNBWrenKVPublicReadArg.Key)
}
inline ::std::string* PbRpcTccNBWrenKVPublicReadArg::add_key() {
  return key_.Add();
}
inline void PbRpcTccNBWrenKVPublicReadArg::add_key(const ::std::string& value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcTccNBWrenKVPublicReadArg.Key)
}
inline void PbRpcTccNBWrenKVPublicReadArg::add_key(const char* value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcTccNBWrenKVPublicReadArg.Key)
}
inline void PbRpcTccNBWrenKVPublicReadArg::add_key(const void* value, size_t size) {
  key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcTccNBWrenKVPublicReadArg.Key)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcTccNBWrenKVPublicReadArg::key() const {
  // @@protoc_insertion_point(field_list:PbRpcTccNBWrenKVPublicReadArg.Key)
  return key_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcTccNBWrenKVPublicReadArg::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcTccNBWrenKVPublicReadArg.Key)
  return &key_;
}

// -------------------------------------------------------------------

// PbRpcTccNBWrenKVPublicReadResult

// required bool Succeeded = 1;
inline bool PbRpcTccNBWrenKVPublicReadResult::has_succeeded() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcTccNBWrenKVPublicReadResult::set_has_succeeded() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcTccNBWrenKVPublicReadResult::clear_has_succeeded() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcTccNBWrenKVPublicReadResult::clear_succeeded() {
  succeeded_ = false;
  clear_has_succeeded();
}
inline bool PbRpcTccNBWrenKVPublicReadResult::succeeded() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVPublicReadResult.Succeeded)
  return succeeded_;
}
inline void PbRpcTccNBWrenKVPublicReadResult::set_succeeded(bool value) {
  set_has_succeeded();
  succeeded_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVPublicReadResult.Succeeded)
}

// repeated bytes Value = 2;
inline int PbRpcTccNBWrenKVPublicReadResult::value_size() const {
  return value_.size();
}
inline void PbRpcTccNBWrenKVPublicReadResult::clear_value() {
  value_.Clear();
}
inline const ::std::string& PbRpcTccNBWrenKVPublicReadResult::value(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVPublicReadResult.Value)
  return value_.Get(index);
}
inline ::std::string* PbRpcTccNBWrenKVPublicReadResult::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenKVPublicReadResult.Value)
  return value_.Mutable(index);
}
inline void PbRpcTccNBWrenKVPublicReadResult::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVPublicReadResult.Value)
  value_.Mutable(index)->assign(value);
}
inline void PbRpcTccNBWrenKVPublicReadResult::set_value(int index, const char* value) {
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcTccNBWrenKVPublicReadResult.Value)
}
inline void PbRpcTccNBWrenKVPublicReadResult::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcTccNBWrenKVPublicReadResult.Value)
}
inline ::std::string* PbRpcTccNBWrenKVPublicReadResult::add_value() {
  return value_.Add();
}
inline void PbRpcTccNBWrenKVPublicReadResult::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcTccNBWrenKVPublicReadResult.Value)
}
inline void PbRpcTccNBWrenKVPublicReadResult::add_value(const char* value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcTccNBWrenKVPublicReadResult.Value)
}
inline void PbRpcTccNBWrenKVPublicReadResult::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcTccNBWrenKVPublicReadResult.Value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcTccNBWrenKVPublicReadResult::value() const {
  // @@protoc_insertion_point(field_list:PbRpcTccNBWrenKVPublicReadResult.Value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcTccNBWrenKVPublicReadResult::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcTccNBWrenKVPublicReadResult.Value)
  return &value_;
}

// -------------------------------------------------------------------

// PbRpcTccNBWrenKVPublicCommitArg

// required int64 ID = 1;
inline bool PbRpcTccNBWrenKVPublicCommitArg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcTccNBWrenKVPublicCommitArg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcTccNBWrenKVPublicCommitArg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcTccNBWrenKVPublicCommitArg::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PbRpcTccNBWrenKVPublicCommitArg::id() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVPublicCommitArg.ID)
  return id_;
}
inline void PbRpcTccNBWrenKVPublicCommitArg::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVPublicCommitArg.ID)
}

// repeated bytes Key = 2;
inline int PbRpcTccNBWrenKVPublicCommitArg::key_size() const {
  return key_.size();
}
inline void PbRpcTccNBWrenKVPublicCommitArg::clear_key() {
  key_.Clear();
}
inline const ::std::string& PbRpcTccNBWrenKVPublicCommitArg::key(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVPublicCommitArg.Key)
  return key_.Get(index);
}
inline ::std::string* PbRpcTccNBWrenKVPublicCommitArg::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenKVPublicCommitArg.Key)
  return key_.Mutable(index);
}
inline void PbRpcTccNBWrenKVPublicCommitArg::set_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVPublicCommitArg.Key)
  key_.Mutable(index)->assign(value);
}
inline void PbRpcTccNBWrenKVPublicCommitArg::set_key(int index, const char* value) {
  key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcTccNBWrenKVPublicCommitArg.Key)
}
inline void PbRpcTccNBWrenKVPublicCommitArg::set_key(int index, const void* value, size_t size) {
  key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcTccNBWrenKVPublicCommitArg.Key)
}
inline ::std::string* PbRpcTccNBWrenKVPublicCommitArg::add_key() {
  return key_.Add();
}
inline void PbRpcTccNBWrenKVPublicCommitArg::add_key(const ::std::string& value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcTccNBWrenKVPublicCommitArg.Key)
}
inline void PbRpcTccNBWrenKVPublicCommitArg::add_key(const char* value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcTccNBWrenKVPublicCommitArg.Key)
}
inline void PbRpcTccNBWrenKVPublicCommitArg::add_key(const void* value, size_t size) {
  key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcTccNBWrenKVPublicCommitArg.Key)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcTccNBWrenKVPublicCommitArg::key() const {
  // @@protoc_insertion_point(field_list:PbRpcTccNBWrenKVPublicCommitArg.Key)
  return key_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcTccNBWrenKVPublicCommitArg::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcTccNBWrenKVPublicCommitArg.Key)
  return &key_;
}

// repeated bytes Value = 3;
inline int PbRpcTccNBWrenKVPublicCommitArg::value_size() const {
  return value_.size();
}
inline void PbRpcTccNBWrenKVPublicCommitArg::clear_value() {
  value_.Clear();
}
inline const ::std::string& PbRpcTccNBWrenKVPublicCommitArg::value(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVPublicCommitArg.Value)
  return value_.Get(index);
}
inline ::std::string* PbRpcTccNBWrenKVPublicCommitArg::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenKVPublicCommitArg.Value)
  return value_.Mutable(index);
}
inline void PbRpcTccNBWrenKVPublicCommitArg::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVPublicCommitArg.Value)
  value_.Mutable(index)->assign(value);
}
inline void PbRpcTccNBWrenKVPublicCommitArg::set_value(int index, const char* value) {
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcTccNBWrenKVPublicCommitArg.Value)
}
inline void PbRpcTccNBWrenKVPublicCommitArg::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcTccNBWrenKVPublicCommitArg.Value)
}
inline ::std::string* PbRpcTccNBWrenKVPublicCommitArg::add_value() {
  return value_.Add();
}
inline void PbRpcTccNBWrenKVPublicCommitArg::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcTccNBWrenKVPublicCommitArg.Value)
}
inline void PbRpcTccNBWrenKVPublicCommitArg::add_value(const char* value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcTccNBWrenKVPublicCommitArg.Value)
}
inline void PbRpcTccNBWrenKVPublicCommitArg::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcTccNBWrenKVPublicCommitArg.Value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcTccNBWrenKVPublicCommitArg::value() const {
  // @@protoc_insertion_point(field_list:PbRpcTccNBWrenKVPublicCommitArg.Value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcTccNBWrenKVPublicCommitArg::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcTccNBWrenKVPublicCommitArg.Value)
  return &value_;
}

// optional .PbPhysicalTimeSpec LCT = 4;
inline bool PbRpcTccNBWrenKVPublicCommitArg::has_lct() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PbRpcTccNBWrenKVPublicCommitArg::set_has_lct() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PbRpcTccNBWrenKVPublicCommitArg::clear_has_lct() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PbRpcTccNBWrenKVPublicCommitArg::clear_lct() {
  if (lct_ != NULL) lct_->::PbPhysicalTimeSpec::Clear();
  clear_has_lct();
}
inline const ::PbPhysicalTimeSpec& PbRpcTccNBWrenKVPublicCommitArg::lct() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVPublicCommitArg.LCT)
  return lct_ != NULL ? *lct_ : *default_instance_->lct_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenKVPublicCommitArg::mutable_lct() {
  set_has_lct();
  if (lct_ == NULL) lct_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenKVPublicCommitArg.LCT)
  return lct_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenKVPublicCommitArg::release_lct() {
  clear_has_lct();
  ::PbPhysicalTimeSpec* temp = lct_;
  lct_ = NULL;
  return temp;
}
inline void PbRpcTccNBWrenKVPublicCommitArg::set_allocated_lct(::PbPhysicalTimeSpec* lct) {
  delete lct_;
  lct_ = lct;
  if (lct) {
    set_has_lct();
  } else {
    clear_has_lct();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcTccNBWrenKVPublicCommitArg.LCT)
}

// -------------------------------------------------------------------

// PbRpcTccNBWrenKVPublicCommitResult

// required bool Succeeded = 1;
inline bool PbRpcTccNBWrenKVPublicCommitResult::has_succeeded() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcTccNBWrenKVPublicCommitResult::set_has_succeeded() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcTccNBWrenKVPublicCommitResult::clear_has_succeeded() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcTccNBWrenKVPublicCommitResult::clear_succeeded() {
  succeeded_ = false;
  clear_has_succeeded();
}
inline bool PbRpcTccNBWrenKVPublicCommitResult::succeeded() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVPublicCommitResult.Succeeded)
  return succeeded_;
}
inline void PbRpcTccNBWrenKVPublicCommitResult::set_succeeded(bool value) {
  set_has_succeeded();
  succeeded_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVPublicCommitResult.Succeeded)
}

// required .PbPhysicalTimeSpec CT = 2;
inline bool PbRpcTccNBWrenKVPublicCommitResult::has_ct() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcTccNBWrenKVPublicCommitResult::set_has_ct() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcTccNBWrenKVPublicCommitResult::clear_has_ct() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcTccNBWrenKVPublicCommitResult::clear_ct() {
  if (ct_ != NULL) ct_->::PbPhysicalTimeSpec::Clear();
  clear_has_ct();
}
inline const ::PbPhysicalTimeSpec& PbRpcTccNBWrenKVPublicCommitResult::ct() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVPublicCommitResult.CT)
  return ct_ != NULL ? *ct_ : *default_instance_->ct_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenKVPublicCommitResult::mutable_ct() {
  set_has_ct();
  if (ct_ == NULL) ct_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenKVPublicCommitResult.CT)
  return ct_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenKVPublicCommitResult::release_ct() {
  clear_has_ct();
  ::PbPhysicalTimeSpec* temp = ct_;
  ct_ = NULL;
  return temp;
}
inline void PbRpcTccNBWrenKVPublicCommitResult::set_allocated_ct(::PbPhysicalTimeSpec* ct) {
  delete ct_;
  ct_ = ct;
  if (ct) {
    set_has_ct();
  } else {
    clear_has_ct();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcTccNBWrenKVPublicCommitResult.CT)
}

// -------------------------------------------------------------------

// PbRpcTccNBWrenKVInternalTxSliceReadKeysArg

// repeated bytes Key = 1;
inline int PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::key_size() const {
  return key_.size();
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::clear_key() {
  key_.Clear();
}
inline const ::std::string& PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::key(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.Key)
  return key_.Get(index);
}
inline ::std::string* PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.Key)
  return key_.Mutable(index);
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::set_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.Key)
  key_.Mutable(index)->assign(value);
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::set_key(int index, const char* value) {
  key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.Key)
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::set_key(int index, const void* value, size_t size) {
  key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.Key)
}
inline ::std::string* PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::add_key() {
  return key_.Add();
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::add_key(const ::std::string& value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.Key)
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::add_key(const char* value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.Key)
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::add_key(const void* value, size_t size) {
  key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.Key)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::key() const {
  // @@protoc_insertion_point(field_list:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.Key)
  return key_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.Key)
  return &key_;
}

// required .PbPhysicalTimeSpec LST = 2;
inline bool PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::has_lst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::set_has_lst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::clear_has_lst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::clear_lst() {
  if (lst_ != NULL) lst_->::PbPhysicalTimeSpec::Clear();
  clear_has_lst();
}
inline const ::PbPhysicalTimeSpec& PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::lst() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.LST)
  return lst_ != NULL ? *lst_ : *default_instance_->lst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::mutable_lst() {
  set_has_lst();
  if (lst_ == NULL) lst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.LST)
  return lst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::release_lst() {
  clear_has_lst();
  ::PbPhysicalTimeSpec* temp = lst_;
  lst_ = NULL;
  return temp;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::set_allocated_lst(::PbPhysicalTimeSpec* lst) {
  delete lst_;
  lst_ = lst;
  if (lst) {
    set_has_lst();
  } else {
    clear_has_lst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.LST)
}

// required .PbPhysicalTimeSpec RST = 3;
inline bool PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::has_rst() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::set_has_rst() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::clear_has_rst() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::clear_rst() {
  if (rst_ != NULL) rst_->::PbPhysicalTimeSpec::Clear();
  clear_has_rst();
}
inline const ::PbPhysicalTimeSpec& PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::rst() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.RST)
  return rst_ != NULL ? *rst_ : *default_instance_->rst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::mutable_rst() {
  set_has_rst();
  if (rst_ == NULL) rst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.RST)
  return rst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::release_rst() {
  clear_has_rst();
  ::PbPhysicalTimeSpec* temp = rst_;
  rst_ = NULL;
  return temp;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::set_allocated_rst(::PbPhysicalTimeSpec* rst) {
  delete rst_;
  rst_ = rst;
  if (rst) {
    set_has_rst();
  } else {
    clear_has_rst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.RST)
}

// optional int64 id = 4;
inline bool PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::id() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.id)
  return id_;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.id)
}

// optional int64 src = 5;
inline bool PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::has_src() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::set_has_src() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::clear_has_src() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::clear_src() {
  src_ = GOOGLE_LONGLONG(0);
  clear_has_src();
}
inline ::google::protobuf::int64 PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::src() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.src)
  return src_;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysArg::set_src(::google::protobuf::int64 value) {
  set_has_src();
  src_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVInternalTxSliceReadKeysArg.src)
}

// -------------------------------------------------------------------

// PbRpcTccNBWrenPartitionClientPrepareRequestArg

// required int64 id = 1;
inline bool PbRpcTccNBWrenPartitionClientPrepareRequestArg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PbRpcTccNBWrenPartitionClientPrepareRequestArg::id() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenPartitionClientPrepareRequestArg.id)
  return id_;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenPartitionClientPrepareRequestArg.id)
}

// required .PbPhysicalTimeSpec LST = 2;
inline bool PbRpcTccNBWrenPartitionClientPrepareRequestArg::has_lst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_has_lst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::clear_has_lst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::clear_lst() {
  if (lst_ != NULL) lst_->::PbPhysicalTimeSpec::Clear();
  clear_has_lst();
}
inline const ::PbPhysicalTimeSpec& PbRpcTccNBWrenPartitionClientPrepareRequestArg::lst() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenPartitionClientPrepareRequestArg.LST)
  return lst_ != NULL ? *lst_ : *default_instance_->lst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenPartitionClientPrepareRequestArg::mutable_lst() {
  set_has_lst();
  if (lst_ == NULL) lst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenPartitionClientPrepareRequestArg.LST)
  return lst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenPartitionClientPrepareRequestArg::release_lst() {
  clear_has_lst();
  ::PbPhysicalTimeSpec* temp = lst_;
  lst_ = NULL;
  return temp;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_allocated_lst(::PbPhysicalTimeSpec* lst) {
  delete lst_;
  lst_ = lst;
  if (lst) {
    set_has_lst();
  } else {
    clear_has_lst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcTccNBWrenPartitionClientPrepareRequestArg.LST)
}

// required .PbPhysicalTimeSpec RST = 3;
inline bool PbRpcTccNBWrenPartitionClientPrepareRequestArg::has_rst() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_has_rst() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::clear_has_rst() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::clear_rst() {
  if (rst_ != NULL) rst_->::PbPhysicalTimeSpec::Clear();
  clear_has_rst();
}
inline const ::PbPhysicalTimeSpec& PbRpcTccNBWrenPartitionClientPrepareRequestArg::rst() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenPartitionClientPrepareRequestArg.RST)
  return rst_ != NULL ? *rst_ : *default_instance_->rst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenPartitionClientPrepareRequestArg::mutable_rst() {
  set_has_rst();
  if (rst_ == NULL) rst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenPartitionClientPrepareRequestArg.RST)
  return rst_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenPartitionClientPrepareRequestArg::release_rst() {
  clear_has_rst();
  ::PbPhysicalTimeSpec* temp = rst_;
  rst_ = NULL;
  return temp;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_allocated_rst(::PbPhysicalTimeSpec* rst) {
  delete rst_;
  rst_ = rst;
  if (rst) {
    set_has_rst();
  } else {
    clear_has_rst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcTccNBWrenPartitionClientPrepareRequestArg.RST)
}

// required .PbPhysicalTimeSpec HT = 4;
inline bool PbRpcTccNBWrenPartitionClientPrepareRequestArg::has_ht() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_has_ht() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::clear_has_ht() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::clear_ht() {
  if (ht_ != NULL) ht_->::PbPhysicalTimeSpec::Clear();
  clear_has_ht();
}
inline const ::PbPhysicalTimeSpec& PbRpcTccNBWrenPartitionClientPrepareRequestArg::ht() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenPartitionClientPrepareRequestArg.HT)
  return ht_ != NULL ? *ht_ : *default_instance_->ht_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenPartitionClientPrepareRequestArg::mutable_ht() {
  set_has_ht();
  if (ht_ == NULL) ht_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenPartitionClientPrepareRequestArg.HT)
  return ht_;
}
inline ::PbPhysicalTimeSpec* PbRpcTccNBWrenPartitionClientPrepareRequestArg::release_ht() {
  clear_has_ht();
  ::PbPhysicalTimeSpec* temp = ht_;
  ht_ = NULL;
  return temp;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_allocated_ht(::PbPhysicalTimeSpec* ht) {
  delete ht_;
  ht_ = ht;
  if (ht) {
    set_has_ht();
  } else {
    clear_has_ht();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcTccNBWrenPartitionClientPrepareRequestArg.HT)
}

// repeated bytes Key = 5;
inline int PbRpcTccNBWrenPartitionClientPrepareRequestArg::key_size() const {
  return key_.size();
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::clear_key() {
  key_.Clear();
}
inline const ::std::string& PbRpcTccNBWrenPartitionClientPrepareRequestArg::key(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Key)
  return key_.Get(index);
}
inline ::std::string* PbRpcTccNBWrenPartitionClientPrepareRequestArg::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Key)
  return key_.Mutable(index);
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Key)
  key_.Mutable(index)->assign(value);
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_key(int index, const char* value) {
  key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Key)
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_key(int index, const void* value, size_t size) {
  key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Key)
}
inline ::std::string* PbRpcTccNBWrenPartitionClientPrepareRequestArg::add_key() {
  return key_.Add();
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::add_key(const ::std::string& value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Key)
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::add_key(const char* value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Key)
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::add_key(const void* value, size_t size) {
  key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Key)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcTccNBWrenPartitionClientPrepareRequestArg::key() const {
  // @@protoc_insertion_point(field_list:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Key)
  return key_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcTccNBWrenPartitionClientPrepareRequestArg::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Key)
  return &key_;
}

// repeated bytes Value = 6;
inline int PbRpcTccNBWrenPartitionClientPrepareRequestArg::value_size() const {
  return value_.size();
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::clear_value() {
  value_.Clear();
}
inline const ::std::string& PbRpcTccNBWrenPartitionClientPrepareRequestArg::value(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Value)
  return value_.Get(index);
}
inline ::std::string* PbRpcTccNBWrenPartitionClientPrepareRequestArg::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Value)
  return value_.Mutable(index);
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Value)
  value_.Mutable(index)->assign(value);
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_value(int index, const char* value) {
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Value)
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Value)
}
inline ::std::string* PbRpcTccNBWrenPartitionClientPrepareRequestArg::add_value() {
  return value_.Add();
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Value)
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::add_value(const char* value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Value)
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcTccNBWrenPartitionClientPrepareRequestArg::value() const {
  // @@protoc_insertion_point(field_list:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcTccNBWrenPartitionClientPrepareRequestArg::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcTccNBWrenPartitionClientPrepareRequestArg.Value)
  return &value_;
}

// required int64 src = 7;
inline bool PbRpcTccNBWrenPartitionClientPrepareRequestArg::has_src() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_has_src() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::clear_has_src() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::clear_src() {
  src_ = GOOGLE_LONGLONG(0);
  clear_has_src();
}
inline ::google::protobuf::int64 PbRpcTccNBWrenPartitionClientPrepareRequestArg::src() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenPartitionClientPrepareRequestArg.src)
  return src_;
}
inline void PbRpcTccNBWrenPartitionClientPrepareRequestArg::set_src(::google::protobuf::int64 value) {
  set_has_src();
  src_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenPartitionClientPrepareRequestArg.src)
}

// -------------------------------------------------------------------

// PbRpcStabilizationTime

// required .PbPhysicalTimeSpec GRST = 1;
inline bool PbRpcStabilizationTime::has_grst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcStabilizationTime::set_has_grst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcStabilizationTime::clear_has_grst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcStabilizationTime::clear_grst() {
  if (grst_ != NULL) grst_->::PbPhysicalTimeSpec::Clear();
  clear_has_grst();
}
inline const ::PbPhysicalTimeSpec& PbRpcStabilizationTime::grst() const {
  // @@protoc_insertion_point(field_get:PbRpcStabilizationTime.GRST)
  return grst_ != NULL ? *grst_ : *default_instance_->grst_;
}
inline ::PbPhysicalTimeSpec* PbRpcStabilizationTime::mutable_grst() {
  set_has_grst();
  if (grst_ == NULL) grst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcStabilizationTime.GRST)
  return grst_;
}
inline ::PbPhysicalTimeSpec* PbRpcStabilizationTime::release_grst() {
  clear_has_grst();
  ::PbPhysicalTimeSpec* temp = grst_;
  grst_ = NULL;
  return temp;
}
inline void PbRpcStabilizationTime::set_allocated_grst(::PbPhysicalTimeSpec* grst) {
  delete grst_;
  grst_ = grst;
  if (grst) {
    set_has_grst();
  } else {
    clear_has_grst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcStabilizationTime.GRST)
}

// required .PbPhysicalTimeSpec GLST = 2;
inline bool PbRpcStabilizationTime::has_glst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcStabilizationTime::set_has_glst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcStabilizationTime::clear_has_glst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcStabilizationTime::clear_glst() {
  if (glst_ != NULL) glst_->::PbPhysicalTimeSpec::Clear();
  clear_has_glst();
}
inline const ::PbPhysicalTimeSpec& PbRpcStabilizationTime::glst() const {
  // @@protoc_insertion_point(field_get:PbRpcStabilizationTime.GLST)
  return glst_ != NULL ? *glst_ : *default_instance_->glst_;
}
inline ::PbPhysicalTimeSpec* PbRpcStabilizationTime::mutable_glst() {
  set_has_glst();
  if (glst_ == NULL) glst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcStabilizationTime.GLST)
  return glst_;
}
inline ::PbPhysicalTimeSpec* PbRpcStabilizationTime::release_glst() {
  clear_has_glst();
  ::PbPhysicalTimeSpec* temp = glst_;
  glst_ = NULL;
  return temp;
}
inline void PbRpcStabilizationTime::set_allocated_glst(::PbPhysicalTimeSpec* glst) {
  delete glst_;
  glst_ = glst;
  if (glst) {
    set_has_glst();
  } else {
    clear_has_glst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcStabilizationTime.GLST)
}

// -------------------------------------------------------------------

// PbRpcPeerStabilizationTimes

// required .PbPhysicalTimeSpec RST = 1;
inline bool PbRpcPeerStabilizationTimes::has_rst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcPeerStabilizationTimes::set_has_rst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcPeerStabilizationTimes::clear_has_rst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcPeerStabilizationTimes::clear_rst() {
  if (rst_ != NULL) rst_->::PbPhysicalTimeSpec::Clear();
  clear_has_rst();
}
inline const ::PbPhysicalTimeSpec& PbRpcPeerStabilizationTimes::rst() const {
  // @@protoc_insertion_point(field_get:PbRpcPeerStabilizationTimes.RST)
  return rst_ != NULL ? *rst_ : *default_instance_->rst_;
}
inline ::PbPhysicalTimeSpec* PbRpcPeerStabilizationTimes::mutable_rst() {
  set_has_rst();
  if (rst_ == NULL) rst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcPeerStabilizationTimes.RST)
  return rst_;
}
inline ::PbPhysicalTimeSpec* PbRpcPeerStabilizationTimes::release_rst() {
  clear_has_rst();
  ::PbPhysicalTimeSpec* temp = rst_;
  rst_ = NULL;
  return temp;
}
inline void PbRpcPeerStabilizationTimes::set_allocated_rst(::PbPhysicalTimeSpec* rst) {
  delete rst_;
  rst_ = rst;
  if (rst) {
    set_has_rst();
  } else {
    clear_has_rst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcPeerStabilizationTimes.RST)
}

// required .PbPhysicalTimeSpec LST = 2;
inline bool PbRpcPeerStabilizationTimes::has_lst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcPeerStabilizationTimes::set_has_lst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcPeerStabilizationTimes::clear_has_lst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcPeerStabilizationTimes::clear_lst() {
  if (lst_ != NULL) lst_->::PbPhysicalTimeSpec::Clear();
  clear_has_lst();
}
inline const ::PbPhysicalTimeSpec& PbRpcPeerStabilizationTimes::lst() const {
  // @@protoc_insertion_point(field_get:PbRpcPeerStabilizationTimes.LST)
  return lst_ != NULL ? *lst_ : *default_instance_->lst_;
}
inline ::PbPhysicalTimeSpec* PbRpcPeerStabilizationTimes::mutable_lst() {
  set_has_lst();
  if (lst_ == NULL) lst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcPeerStabilizationTimes.LST)
  return lst_;
}
inline ::PbPhysicalTimeSpec* PbRpcPeerStabilizationTimes::release_lst() {
  clear_has_lst();
  ::PbPhysicalTimeSpec* temp = lst_;
  lst_ = NULL;
  return temp;
}
inline void PbRpcPeerStabilizationTimes::set_allocated_lst(::PbPhysicalTimeSpec* lst) {
  delete lst_;
  lst_ = lst;
  if (lst) {
    set_has_lst();
  } else {
    clear_has_lst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcPeerStabilizationTimes.LST)
}

// optional int64 SrcPartition = 4;
inline bool PbRpcPeerStabilizationTimes::has_srcpartition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbRpcPeerStabilizationTimes::set_has_srcpartition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbRpcPeerStabilizationTimes::clear_has_srcpartition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbRpcPeerStabilizationTimes::clear_srcpartition() {
  srcpartition_ = GOOGLE_LONGLONG(0);
  clear_has_srcpartition();
}
inline ::google::protobuf::int64 PbRpcPeerStabilizationTimes::srcpartition() const {
  // @@protoc_insertion_point(field_get:PbRpcPeerStabilizationTimes.SrcPartition)
  return srcpartition_;
}
inline void PbRpcPeerStabilizationTimes::set_srcpartition(::google::protobuf::int64 value) {
  set_has_srcpartition();
  srcpartition_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPeerStabilizationTimes.SrcPartition)
}

// -------------------------------------------------------------------

// PbRpcST

// required int32 Round = 1;
inline bool PbRpcST::has_round() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcST::set_has_round() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcST::clear_has_round() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcST::clear_round() {
  round_ = 0;
  clear_has_round();
}
inline ::google::protobuf::int32 PbRpcST::round() const {
  // @@protoc_insertion_point(field_get:PbRpcST.Round)
  return round_;
}
inline void PbRpcST::set_round(::google::protobuf::int32 value) {
  set_has_round();
  round_ = value;
  // @@protoc_insertion_point(field_set:PbRpcST.Round)
}

// required .PbPhysicalTimeSpec RST = 2;
inline bool PbRpcST::has_rst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcST::set_has_rst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcST::clear_has_rst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcST::clear_rst() {
  if (rst_ != NULL) rst_->::PbPhysicalTimeSpec::Clear();
  clear_has_rst();
}
inline const ::PbPhysicalTimeSpec& PbRpcST::rst() const {
  // @@protoc_insertion_point(field_get:PbRpcST.RST)
  return rst_ != NULL ? *rst_ : *default_instance_->rst_;
}
inline ::PbPhysicalTimeSpec* PbRpcST::mutable_rst() {
  set_has_rst();
  if (rst_ == NULL) rst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcST.RST)
  return rst_;
}
inline ::PbPhysicalTimeSpec* PbRpcST::release_rst() {
  clear_has_rst();
  ::PbPhysicalTimeSpec* temp = rst_;
  rst_ = NULL;
  return temp;
}
inline void PbRpcST::set_allocated_rst(::PbPhysicalTimeSpec* rst) {
  delete rst_;
  rst_ = rst;
  if (rst) {
    set_has_rst();
  } else {
    clear_has_rst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcST.RST)
}

// required .PbPhysicalTimeSpec LST = 3;
inline bool PbRpcST::has_lst() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbRpcST::set_has_lst() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbRpcST::clear_has_lst() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbRpcST::clear_lst() {
  if (lst_ != NULL) lst_->::PbPhysicalTimeSpec::Clear();
  clear_has_lst();
}
inline const ::PbPhysicalTimeSpec& PbRpcST::lst() const {
  // @@protoc_insertion_point(field_get:PbRpcST.LST)
  return lst_ != NULL ? *lst_ : *default_instance_->lst_;
}
inline ::PbPhysicalTimeSpec* PbRpcST::mutable_lst() {
  set_has_lst();
  if (lst_ == NULL) lst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcST.LST)
  return lst_;
}
inline ::PbPhysicalTimeSpec* PbRpcST::release_lst() {
  clear_has_lst();
  ::PbPhysicalTimeSpec* temp = lst_;
  lst_ = NULL;
  return temp;
}
inline void PbRpcST::set_allocated_lst(::PbPhysicalTimeSpec* lst) {
  delete lst_;
  lst_ = lst;
  if (lst) {
    set_has_lst();
  } else {
    clear_has_lst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcST.LST)
}

// -------------------------------------------------------------------

// PbRpcTccNBWrenKVInternalTxSliceReadKeysResult

// required bool Succeeded = 1;
inline bool PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::has_succeeded() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::set_has_succeeded() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::clear_has_succeeded() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::clear_succeeded() {
  succeeded_ = false;
  clear_has_succeeded();
}
inline bool PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::succeeded() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.Succeeded)
  return succeeded_;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::set_succeeded(bool value) {
  set_has_succeeded();
  succeeded_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.Succeeded)
}

// repeated bytes Value = 2;
inline int PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::value_size() const {
  return value_.size();
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::clear_value() {
  value_.Clear();
}
inline const ::std::string& PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::value(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.Value)
  return value_.Get(index);
}
inline ::std::string* PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.Value)
  return value_.Mutable(index);
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.Value)
  value_.Mutable(index)->assign(value);
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::set_value(int index, const char* value) {
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.Value)
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.Value)
}
inline ::std::string* PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::add_value() {
  return value_.Add();
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.Value)
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::add_value(const char* value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.Value)
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.Value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::value() const {
  // @@protoc_insertion_point(field_list:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.Value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.Value)
  return &value_;
}

// optional int32 Src = 3;
inline bool PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::has_src() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::set_has_src() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::clear_has_src() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::clear_src() {
  src_ = 0;
  clear_has_src();
}
inline ::google::protobuf::int32 PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::src() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.Src)
  return src_;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::set_src(::google::protobuf::int32 value) {
  set_has_src();
  src_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.Src)
}

// optional int64 id = 4;
inline bool PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::id() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.id)
  return id_;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.id)
}

// optional double waitedXact = 5;
inline bool PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::has_waitedxact() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::set_has_waitedxact() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::clear_has_waitedxact() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::clear_waitedxact() {
  waitedxact_ = 0;
  clear_has_waitedxact();
}
inline double PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::waitedxact() const {
  // @@protoc_insertion_point(field_get:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.waitedXact)
  return waitedxact_;
}
inline void PbRpcTccNBWrenKVInternalTxSliceReadKeysResult::set_waitedxact(double value) {
  set_has_waitedxact();
  waitedxact_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTccNBWrenKVInternalTxSliceReadKeysResult.waitedXact)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tcc_5fnb_5fwren_5fmessages_2eproto__INCLUDED
